{
    "brief": [
        "For years Microsoft has stated that the forest was the security boundary in Active Directory.   ...    For example, Microsoft’s “What Are Domains and Forests?” document (last updated in 2014) has a “Forests as Security Boundaries” section which states (emphasis added):   ...    Each forest is a single instance of the directory, the top-level Active Directory container, and a security boundary for all objects that are located in the forest.   ...    By applying the MS-RPRN abuse issue (previously reported to Microsoft Security Response Center by my workmate Lee Christensen) with various trust scenarios, we determined that administrators from one forest can in fact compromise resources in a forest that it shares a two-way interforest trust with.   ...    The tl;dr non-technical explanation of “Why Care?” is that if your organization has a two-way forest trust (possibly ‘external’ trusts as well, more on that later) with another Active Directory forest, and if an attacker can compromise a single machine with unconstrained delegation (e.g. a domain controller) in that foreign forest, then they can leverage this to compromise your forest and every domain within it.   ...    The tl;dr technical explanation is due to several default Active Directory forest configurations (detailed in the “Attack Explanation” section below) an attacker who compromises a domain controller in a forest (or any server with unconstrained delegation in said forest) can coerce domain controllers in foreign forests to authenticate to the attacker-controlled server through “the printer bug.” Due to various delegation settings, the foreign domain controller’s ticket-granting-ticket (TGT) can be extracted on the attacker-controlled server, reapplied, and used to compromise the credential material in the foreign forest.   ...    This means that any user that does not have the “Account is sensitive and cannot be delegated” setting on their account or is not contained within the “Protected Users” group will send their TGT within a service ticket when accessing a server with unconstrained delegation.   ...    According to Microsoft, “When full delegation is enabled for Kerberos on a server, the server can use the delegated ticket-granting ticket (TGT) to connect as the user to any server, including those across a one way trust.“ This means that delegated TGT tickets can cross interforest trust boundaries.   ...    Many of the default rights for users in a forest are granted through the Authenticated Users.” This means that any user in a trusted forest can execute the “printer bug” against machines in a foreign forest, as “Authenticated Users” is all the access needed to trigger the forced authentication.   ...    Combined together, this means that if FORESTA has a two way interforest trust with FORESTB, then the compromise of any domain controller (or any server with unconstrained delegation) in FORESTB can be leveraged to compromise the FORESTA forest root (or vice versa) and all domains within it!   ...    FORESTA’s domain controller will authenticate to the attacker-controlled server in FORESTB with the FORESTA domain controller machine account (DCA$ in this case).   ...    However, as the forest is specified as the trust boundary, this is not quite as interesting as the compromise of interforest trusts that this new attack entails.   ...    We believe this is because while delegation TGTs can flow from FORESTA to FORESTB in this case, users in FORESTB cannot authenticate to FORESTA, so they do not receive a referral ticket with “Authenticated Users” within in it.   ...    As external trusts are notoriously difficult to get functioning 100% with Kerberos (see the Kerberos V5 support section of Table 1 External vs. Forest Trusts in the “Technologies for Federating Multiple Forests” documentation), “Microsoft recommends a forest trust be created between forests rather than an external trust.” We believe it is likely that NTLM relay abuse scenarios exist to abuse the same issue in external trust types but do not currently have a completely functioning proof of concept.   ...    Users from the Red Forest are then added to the BUILTIN\\Administrators groups on domain controllers in the production forests for domain controller administration.   ...    However, there may be situations where domain controllers or other privileged users from the trusted domain (FORESTA in this case) authenticate to the attacker-controller domain controller in FORESTB.   ...    This can be a domain trust or a forest trust.   ...    This implies that there may be bastion forest setups where the CORP forest has a two-way interforest trust with the PRIV forest and is abusable via the attack described in this post.   ...    I tested two trust-related security mitigations: selective authentication and the disabling of TGT delegation across trusts.   ...    Selective authentication is a security setting that can be set on interforest trusts.   ...    If the domain controllers in each domain are granted this right on each other, then the attack can succeed, assuming an attacker has code execution as SYSTEM on a domain controller in FORESTB, which uses the DCB$ machine account when querying FORESTA and the subsequent printer bug trigger.   ...    So in most realistic scenarios where selective authentication is configured for at least domain controllers between the trusting forests, the attack may still work.   ...    However, as the setting was only set in FORESTA, not in FORESTB, the attack will still work from FORESTA to FORESTB, as delegated TGTs can still flow from FORESTB to FORESTA:   ...    We also caution against believing these specific steps to be any kind of silver bullet, as there are some very interesting attack scenarios beyond just domain controllers.   ...   ",
        "F\no\nr\n \ny\ne\na\nr\ns\n \nM\ni\nc\nr\no\ns\no\nf\nt\n \nh\na\ns\n \ns\nt\na\nt\ne\nd\n \nt\nh\na\nt\n \nt\nh\ne\n \nf\no\nr\ne\ns\nt\n \nw\na\ns\n \nt\nh\ne\n \ns\ne\nc\nu\nr\ni\nt\ny\n \nb\no\nu\nn\nd\na\nr\ny\n \ni\nn\n \nA\nc\nt\ni\nv\ne\n \nD\ni\nr\ne\nc\nt\no\nr\ny\n.\n \n \n \n.\n.\n.\n \n \n \n \nF\no\nr\n \ne\nx\na\nm\np\nl\ne\n,\n \nM\ni\nc\nr\no\ns\no\nf\nt\n’\ns\n \n“\nW\nh\na\nt\n \nA\nr\ne\n \nD\no\nm\na\ni\nn\ns\n \na\nn\nd\n \nF\no\nr\ne\ns\nt\ns\n?\n”\n \nd\no\nc\nu\nm\ne\nn\nt\n \n(\nl\na\ns\nt\n \nu\np\nd\na\nt\ne\nd\n \ni\nn\n \n2\n0\n1\n4\n)\n \nh\na\ns\n \na\n \n“\nF\no\nr\ne\ns\nt\ns\n \na\ns\n \nS\ne\nc\nu\nr\ni\nt\ny\n \nB\no\nu\nn\nd\na\nr\ni\ne\ns\n”\n \ns\ne\nc\nt\ni\no\nn\n \nw\nh\ni\nc\nh\n \ns\nt\na\nt\ne\ns\n \n(\ne\nm\np\nh\na\ns\ni\ns\n \na\nd\nd\ne\nd\n)\n:\n \n \n \n.\n.\n.\n \n \n \n \nE\na\nc\nh\n \nf\no\nr\ne\ns\nt\n \ni\ns\n \na\n \ns\ni\nn\ng\nl\ne\n \ni\nn\ns\nt\na\nn\nc\ne\n \no\nf\n \nt\nh\ne\n \nd\ni\nr\ne\nc\nt\no\nr\ny\n,\n \nt\nh\ne\n \nt\no\np\n-\nl\ne\nv\ne\nl\n \nA\nc\nt\ni\nv\ne\n \nD\ni\nr\ne\nc\nt\no\nr\ny\n \nc\no\nn\nt\na\ni\nn\ne\nr\n,\n \na\nn\nd\n \na\n \ns\ne\nc\nu\nr\ni\nt\ny\n \nb\no\nu\nn\nd\na\nr\ny\n \nf\no\nr\n \na\nl\nl\n \no\nb\nj\ne\nc\nt\ns\n \nt\nh\na\nt\n \na\nr\ne\n \nl\no\nc\na\nt\ne\nd\n \ni\nn\n \nt\nh\ne\n \nf\no\nr\ne\ns\nt\n.\n \n \n \n.\n.\n.\n \n \n \n \nB\ny\n \na\np\np\nl\ny\ni\nn\ng\n \nt\nh\ne\n \nM\nS\n-\nR\nP\nR\nN\n \na\nb\nu\ns\ne\n \ni\ns\ns\nu\ne\n \n(\np\nr\ne\nv\ni\no\nu\ns\nl\ny\n \nr\ne\np\no\nr\nt\ne\nd\n \nt\no\n \nM\ni\nc\nr\no\ns\no\nf\nt\n \nS\ne\nc\nu\nr\ni\nt\ny\n \nR\ne\ns\np\no\nn\ns\ne\n \nC\ne\nn\nt\ne\nr\n \nb\ny\n \nm\ny\n \nw\no\nr\nk\nm\na\nt\ne\n \nL\ne\ne\n \nC\nh\nr\ni\ns\nt\ne\nn\ns\ne\nn\n)\n \nw\ni\nt\nh\n \nv\na\nr\ni\no\nu\ns\n \nt\nr\nu\ns\nt\n \ns\nc\ne\nn\na\nr\ni\no\ns\n,\n \nw\ne\n \nd\ne\nt\ne\nr\nm\ni\nn\ne\nd\n \nt\nh\na\nt\n \na\nd\nm\ni\nn\ni\ns\nt\nr\na\nt\no\nr\ns\n \nf\nr\no\nm\n \no\nn\ne\n \nf\no\nr\ne\ns\nt\n \nc\na\nn\n \ni\nn\n \nf\na\nc\nt\n \nc\no\nm\np\nr\no\nm\ni\ns\ne\n \nr\ne\ns\no\nu\nr\nc\ne\ns\n \ni\nn\n \na\n \nf\no\nr\ne\ns\nt\n \nt\nh\na\nt\n \ni\nt\n \ns\nh\na\nr\ne\ns\n \na\n \nt\nw\no\n-\nw\na\ny\n \ni\nn\nt\ne\nr\nf\no\nr\ne\ns\nt\n \nt\nr\nu\ns\nt\n \nw\ni\nt\nh\n.\n \n \n \n.\n.\n.\n \n \n \n \nT\nh\ne\n \nt\nl\n;\nd\nr\n \nn\no\nn\n-\nt\ne\nc\nh\nn\ni\nc\na\nl\n \ne\nx\np\nl\na\nn\na\nt\ni\no\nn\n \no\nf\n \n“\nW\nh\ny\n \nC\na\nr\ne\n?\n”\n \ni\ns\n \nt\nh\na\nt\n \ni\nf\n \ny\no\nu\nr\n \no\nr\ng\na\nn\ni\nz\na\nt\ni\no\nn\n \nh\na\ns\n \na\n \nt\nw\no\n-\nw\na\ny\n \nf\no\nr\ne\ns\nt\n \nt\nr\nu\ns\nt\n \n(\np\no\ns\ns\ni\nb\nl\ny\n \n‘\ne\nx\nt\ne\nr\nn\na\nl\n’\n \nt\nr\nu\ns\nt\ns\n \na\ns\n \nw\ne\nl\nl\n,\n \nm\no\nr\ne\n \no\nn\n \nt\nh\na\nt\n \nl\na\nt\ne\nr\n)\n \nw\ni\nt\nh\n \na\nn\no\nt\nh\ne\nr\n \nA\nc\nt\ni\nv\ne\n \nD\ni\nr\ne\nc\nt\no\nr\ny\n \nf\no\nr\ne\ns\nt\n,\n \na\nn\nd\n \ni\nf\n \na\nn\n \na\nt\nt\na\nc\nk\ne\nr\n \nc\na\nn\n \nc\no\nm\np\nr\no\nm\ni\ns\ne\n \na\n \ns\ni\nn\ng\nl\ne\n \nm\na\nc\nh\ni\nn\ne\n \nw\ni\nt\nh\n \nu\nn\nc\no\nn\ns\nt\nr\na\ni\nn\ne\nd\n \nd\ne\nl\ne\ng\na\nt\ni\no\nn\n \n(\ne\n.\ng\n.\n \na\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\n)\n \ni\nn\n \nt\nh\na\nt\n \nf\no\nr\ne\ni\ng\nn\n \nf\no\nr\ne\ns\nt\n,\n \nt\nh\ne\nn\n \nt\nh\ne\ny\n \nc\na\nn\n \nl\ne\nv\ne\nr\na\ng\ne\n \nt\nh\ni\ns\n \nt\no\n \nc\no\nm\np\nr\no\nm\ni\ns\ne\n \ny\no\nu\nr\n \nf\no\nr\ne\ns\nt\n \na\nn\nd\n \ne\nv\ne\nr\ny\n \nd\no\nm\na\ni\nn\n \nw\ni\nt\nh\ni\nn\n \ni\nt\n.\n \n \n \n.\n.\n.\n \n \n \n \nT\nh\ne\n \nt\nl\n;\nd\nr\n \nt\ne\nc\nh\nn\ni\nc\na\nl\n \ne\nx\np\nl\na\nn\na\nt\ni\no\nn\n \ni\ns\n \nd\nu\ne\n \nt\no\n \ns\ne\nv\ne\nr\na\nl\n \nd\ne\nf\na\nu\nl\nt\n \nA\nc\nt\ni\nv\ne\n \nD\ni\nr\ne\nc\nt\no\nr\ny\n \nf\no\nr\ne\ns\nt\n \nc\no\nn\nf\ni\ng\nu\nr\na\nt\ni\no\nn\ns\n \n(\nd\ne\nt\na\ni\nl\ne\nd\n \ni\nn\n \nt\nh\ne\n \n“\nA\nt\nt\na\nc\nk\n \nE\nx\np\nl\na\nn\na\nt\ni\no\nn\n”\n \ns\ne\nc\nt\ni\no\nn\n \nb\ne\nl\no\nw\n)\n \na\nn\n \na\nt\nt\na\nc\nk\ne\nr\n \nw\nh\no\n \nc\no\nm\np\nr\no\nm\ni\ns\ne\ns\n \na\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\n \ni\nn\n \na\n \nf\no\nr\ne\ns\nt\n \n(\no\nr\n \na\nn\ny\n \ns\ne\nr\nv\ne\nr\n \nw\ni\nt\nh\n \nu\nn\nc\no\nn\ns\nt\nr\na\ni\nn\ne\nd\n \nd\ne\nl\ne\ng\na\nt\ni\no\nn\n \ni\nn\n \ns\na\ni\nd\n \nf\no\nr\ne\ns\nt\n)\n \nc\na\nn\n \nc\no\ne\nr\nc\ne\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\ns\n \ni\nn\n \nf\no\nr\ne\ni\ng\nn\n \nf\no\nr\ne\ns\nt\ns\n \nt\no\n \na\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ne\n \nt\no\n \nt\nh\ne\n \na\nt\nt\na\nc\nk\ne\nr\n-\nc\no\nn\nt\nr\no\nl\nl\ne\nd\n \ns\ne\nr\nv\ne\nr\n \nt\nh\nr\no\nu\ng\nh\n \n“\nt\nh\ne\n \np\nr\ni\nn\nt\ne\nr\n \nb\nu\ng\n.\n”\n \nD\nu\ne\n \nt\no\n \nv\na\nr\ni\no\nu\ns\n \nd\ne\nl\ne\ng\na\nt\ni\no\nn\n \ns\ne\nt\nt\ni\nn\ng\ns\n,\n \nt\nh\ne\n \nf\no\nr\ne\ni\ng\nn\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\n’\ns\n \nt\ni\nc\nk\ne\nt\n-\ng\nr\na\nn\nt\ni\nn\ng\n-\nt\ni\nc\nk\ne\nt\n \n(\nT\nG\nT\n)\n \nc\na\nn\n \nb\ne\n \ne\nx\nt\nr\na\nc\nt\ne\nd\n \no\nn\n \nt\nh\ne\n \na\nt\nt\na\nc\nk\ne\nr\n-\nc\no\nn\nt\nr\no\nl\nl\ne\nd\n \ns\ne\nr\nv\ne\nr\n,\n \nr\ne\na\np\np\nl\ni\ne\nd\n,\n \na\nn\nd\n \nu\ns\ne\nd\n \nt\no\n \nc\no\nm\np\nr\no\nm\ni\ns\ne\n \nt\nh\ne\n \nc\nr\ne\nd\ne\nn\nt\ni\na\nl\n \nm\na\nt\ne\nr\ni\na\nl\n \ni\nn\n \nt\nh\ne\n \nf\no\nr\ne\ni\ng\nn\n \nf\no\nr\ne\ns\nt\n.\n \n \n \n.\n.\n.\n \n \n \n \nT\nh\ni\ns\n \nm\ne\na\nn\ns\n \nt\nh\na\nt\n \na\nn\ny\n \nu\ns\ne\nr\n \nt\nh\na\nt\n \nd\no\ne\ns\n \nn\no\nt\n \nh\na\nv\ne\n \nt\nh\ne\n \n“\nA\nc\nc\no\nu\nn\nt\n \ni\ns\n \ns\ne\nn\ns\ni\nt\ni\nv\ne\n \na\nn\nd\n \nc\na\nn\nn\no\nt\n \nb\ne\n \nd\ne\nl\ne\ng\na\nt\ne\nd\n”\n \ns\ne\nt\nt\ni\nn\ng\n \no\nn\n \nt\nh\ne\ni\nr\n \na\nc\nc\no\nu\nn\nt\n \no\nr\n \ni\ns\n \nn\no\nt\n \nc\no\nn\nt\na\ni\nn\ne\nd\n \nw\ni\nt\nh\ni\nn\n \nt\nh\ne\n \n“\nP\nr\no\nt\ne\nc\nt\ne\nd\n \nU\ns\ne\nr\ns\n”\n \ng\nr\no\nu\np\n \nw\ni\nl\nl\n \ns\ne\nn\nd\n \nt\nh\ne\ni\nr\n \nT\nG\nT\n \nw\ni\nt\nh\ni\nn\n \na\n \ns\ne\nr\nv\ni\nc\ne\n \nt\ni\nc\nk\ne\nt\n \nw\nh\ne\nn\n \na\nc\nc\ne\ns\ns\ni\nn\ng\n \na\n \ns\ne\nr\nv\ne\nr\n \nw\ni\nt\nh\n \nu\nn\nc\no\nn\ns\nt\nr\na\ni\nn\ne\nd\n \nd\ne\nl\ne\ng\na\nt\ni\no\nn\n.\n \n \n \n.\n.\n.\n \n \n \n \nA\nc\nc\no\nr\nd\ni\nn\ng\n \nt\no\n \nM\ni\nc\nr\no\ns\no\nf\nt\n,\n \n“\nW\nh\ne\nn\n \nf\nu\nl\nl\n \nd\ne\nl\ne\ng\na\nt\ni\no\nn\n \ni\ns\n \ne\nn\na\nb\nl\ne\nd\n \nf\no\nr\n \nK\ne\nr\nb\ne\nr\no\ns\n \no\nn\n \na\n \ns\ne\nr\nv\ne\nr\n,\n \nt\nh\ne\n \ns\ne\nr\nv\ne\nr\n \nc\na\nn\n \nu\ns\ne\n \nt\nh\ne\n \nd\ne\nl\ne\ng\na\nt\ne\nd\n \nt\ni\nc\nk\ne\nt\n-\ng\nr\na\nn\nt\ni\nn\ng\n \nt\ni\nc\nk\ne\nt\n \n(\nT\nG\nT\n)\n \nt\no\n \nc\no\nn\nn\ne\nc\nt\n \na\ns\n \nt\nh\ne\n \nu\ns\ne\nr\n \nt\no\n \na\nn\ny\n \ns\ne\nr\nv\ne\nr\n,\n \ni\nn\nc\nl\nu\nd\ni\nn\ng\n \nt\nh\no\ns\ne\n \na\nc\nr\no\ns\ns\n \na\n \no\nn\ne\n \nw\na\ny\n \nt\nr\nu\ns\nt\n.\n“\n \nT\nh\ni\ns\n \nm\ne\na\nn\ns\n \nt\nh\na\nt\n \nd\ne\nl\ne\ng\na\nt\ne\nd\n \nT\nG\nT\n \nt\ni\nc\nk\ne\nt\ns\n \nc\na\nn\n \nc\nr\no\ns\ns\n \ni\nn\nt\ne\nr\nf\no\nr\ne\ns\nt\n \nt\nr\nu\ns\nt\n \nb\no\nu\nn\nd\na\nr\ni\ne\ns\n.\n \n \n \n.\n.\n.\n \n \n \n \nM\na\nn\ny\n \no\nf\n \nt\nh\ne\n \nd\ne\nf\na\nu\nl\nt\n \nr\ni\ng\nh\nt\ns\n \nf\no\nr\n \nu\ns\ne\nr\ns\n \ni\nn\n \na\n \nf\no\nr\ne\ns\nt\n \na\nr\ne\n \ng\nr\na\nn\nt\ne\nd\n \nt\nh\nr\no\nu\ng\nh\n \nt\nh\ne\n \nA\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ne\nd\n \nU\ns\ne\nr\ns\n.\n”\n \nT\nh\ni\ns\n \nm\ne\na\nn\ns\n \nt\nh\na\nt\n \na\nn\ny\n \nu\ns\ne\nr\n \ni\nn\n \na\n \nt\nr\nu\ns\nt\ne\nd\n \nf\no\nr\ne\ns\nt\n \nc\na\nn\n \ne\nx\ne\nc\nu\nt\ne\n \nt\nh\ne\n \n“\np\nr\ni\nn\nt\ne\nr\n \nb\nu\ng\n”\n \na\ng\na\ni\nn\ns\nt\n \nm\na\nc\nh\ni\nn\ne\ns\n \ni\nn\n \na\n \nf\no\nr\ne\ni\ng\nn\n \nf\no\nr\ne\ns\nt\n,\n \na\ns\n \n“\nA\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ne\nd\n \nU\ns\ne\nr\ns\n”\n \ni\ns\n \na\nl\nl\n \nt\nh\ne\n \na\nc\nc\ne\ns\ns\n \nn\ne\ne\nd\ne\nd\n \nt\no\n \nt\nr\ni\ng\ng\ne\nr\n \nt\nh\ne\n \nf\no\nr\nc\ne\nd\n \na\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ni\no\nn\n.\n \n \n \n.\n.\n.\n \n \n \n \nC\no\nm\nb\ni\nn\ne\nd\n \nt\no\ng\ne\nt\nh\ne\nr\n,\n \nt\nh\ni\ns\n \nm\ne\na\nn\ns\n \nt\nh\na\nt\n \ni\nf\n \nF\nO\nR\nE\nS\nT\nA\n \nh\na\ns\n \na\n \nt\nw\no\n \nw\na\ny\n \ni\nn\nt\ne\nr\nf\no\nr\ne\ns\nt\n \nt\nr\nu\ns\nt\n \nw\ni\nt\nh\n \nF\nO\nR\nE\nS\nT\nB\n,\n \nt\nh\ne\nn\n \nt\nh\ne\n \nc\no\nm\np\nr\no\nm\ni\ns\ne\n \no\nf\n \na\nn\ny\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\n \n(\no\nr\n \na\nn\ny\n \ns\ne\nr\nv\ne\nr\n \nw\ni\nt\nh\n \nu\nn\nc\no\nn\ns\nt\nr\na\ni\nn\ne\nd\n \nd\ne\nl\ne\ng\na\nt\ni\no\nn\n)\n \ni\nn\n \nF\nO\nR\nE\nS\nT\nB\n \nc\na\nn\n \nb\ne\n \nl\ne\nv\ne\nr\na\ng\ne\nd\n \nt\no\n \nc\no\nm\np\nr\no\nm\ni\ns\ne\n \nt\nh\ne\n \nF\nO\nR\nE\nS\nT\nA\n \nf\no\nr\ne\ns\nt\n \nr\no\no\nt\n \n(\no\nr\n \nv\ni\nc\ne\n \nv\ne\nr\ns\na\n)\n \na\nn\nd\n \na\nl\nl\n \nd\no\nm\na\ni\nn\ns\n \nw\ni\nt\nh\ni\nn\n \ni\nt\n!\n \n \n \n.\n.\n.\n \n \n \n \nF\nO\nR\nE\nS\nT\nA\n’\ns\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\n \nw\ni\nl\nl\n \na\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ne\n \nt\no\n \nt\nh\ne\n \na\nt\nt\na\nc\nk\ne\nr\n-\nc\no\nn\nt\nr\no\nl\nl\ne\nd\n \ns\ne\nr\nv\ne\nr\n \ni\nn\n \nF\nO\nR\nE\nS\nT\nB\n \nw\ni\nt\nh\n \nt\nh\ne\n \nF\nO\nR\nE\nS\nT\nA\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\n \nm\na\nc\nh\ni\nn\ne\n \na\nc\nc\no\nu\nn\nt\n \n(\nD\nC\nA\n$\n \ni\nn\n \nt\nh\ni\ns\n \nc\na\ns\ne\n)\n.\n \n \n \n.\n.\n.\n \n \n \n \nH\no\nw\ne\nv\ne\nr\n,\n \na\ns\n \nt\nh\ne\n \nf\no\nr\ne\ns\nt\n \ni\ns\n \ns\np\ne\nc\ni\nf\ni\ne\nd\n \na\ns\n \nt\nh\ne\n \nt\nr\nu\ns\nt\n \nb\no\nu\nn\nd\na\nr\ny\n,\n \nt\nh\ni\ns\n \ni\ns\n \nn\no\nt\n \nq\nu\ni\nt\ne\n \na\ns\n \ni\nn\nt\ne\nr\ne\ns\nt\ni\nn\ng\n \na\ns\n \nt\nh\ne\n \nc\no\nm\np\nr\no\nm\ni\ns\ne\n \no\nf\n \ni\nn\nt\ne\nr\nf\no\nr\ne\ns\nt\n \nt\nr\nu\ns\nt\ns\n \nt\nh\na\nt\n \nt\nh\ni\ns\n \nn\ne\nw\n \na\nt\nt\na\nc\nk\n \ne\nn\nt\na\ni\nl\ns\n.\n \n \n \n.\n.\n.\n \n \n \n \nW\ne\n \nb\ne\nl\ni\ne\nv\ne\n \nt\nh\ni\ns\n \ni\ns\n \nb\ne\nc\na\nu\ns\ne\n \nw\nh\ni\nl\ne\n \nd\ne\nl\ne\ng\na\nt\ni\no\nn\n \nT\nG\nT\ns\n \nc\na\nn\n \nf\nl\no\nw\n \nf\nr\no\nm\n \nF\nO\nR\nE\nS\nT\nA\n \nt\no\n \nF\nO\nR\nE\nS\nT\nB\n \ni\nn\n \nt\nh\ni\ns\n \nc\na\ns\ne\n,\n \nu\ns\ne\nr\ns\n \ni\nn\n \nF\nO\nR\nE\nS\nT\nB\n \nc\na\nn\nn\no\nt\n \na\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ne\n \nt\no\n \nF\nO\nR\nE\nS\nT\nA\n,\n \ns\no\n \nt\nh\ne\ny\n \nd\no\n \nn\no\nt\n \nr\ne\nc\ne\ni\nv\ne\n \na\n \nr\ne\nf\ne\nr\nr\na\nl\n \nt\ni\nc\nk\ne\nt\n \nw\ni\nt\nh\n \n“\nA\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ne\nd\n \nU\ns\ne\nr\ns\n”\n \nw\ni\nt\nh\ni\nn\n \ni\nn\n \ni\nt\n.\n \n \n \n.\n.\n.\n \n \n \n \nA\ns\n \ne\nx\nt\ne\nr\nn\na\nl\n \nt\nr\nu\ns\nt\ns\n \na\nr\ne\n \nn\no\nt\no\nr\ni\no\nu\ns\nl\ny\n \nd\ni\nf\nf\ni\nc\nu\nl\nt\n \nt\no\n \ng\ne\nt\n \nf\nu\nn\nc\nt\ni\no\nn\ni\nn\ng\n \n1\n0\n0\n%\n \nw\ni\nt\nh\n \nK\ne\nr\nb\ne\nr\no\ns\n \n(\ns\ne\ne\n \nt\nh\ne\n \nK\ne\nr\nb\ne\nr\no\ns\n \nV\n5\n \ns\nu\np\np\no\nr\nt\n \ns\ne\nc\nt\ni\no\nn\n \no\nf\n \nT\na\nb\nl\ne\n \n1\n \nE\nx\nt\ne\nr\nn\na\nl\n \nv\ns\n.\n \nF\no\nr\ne\ns\nt\n \nT\nr\nu\ns\nt\ns\n \ni\nn\n \nt\nh\ne\n \n“\nT\ne\nc\nh\nn\no\nl\no\ng\ni\ne\ns\n \nf\no\nr\n \nF\ne\nd\ne\nr\na\nt\ni\nn\ng\n \nM\nu\nl\nt\ni\np\nl\ne\n \nF\no\nr\ne\ns\nt\ns\n”\n \nd\no\nc\nu\nm\ne\nn\nt\na\nt\ni\no\nn\n)\n,\n \n“\nM\ni\nc\nr\no\ns\no\nf\nt\n \nr\ne\nc\no\nm\nm\ne\nn\nd\ns\n \na\n \nf\no\nr\ne\ns\nt\n \nt\nr\nu\ns\nt\n \nb\ne\n \nc\nr\ne\na\nt\ne\nd\n \nb\ne\nt\nw\ne\ne\nn\n \nf\no\nr\ne\ns\nt\ns\n \nr\na\nt\nh\ne\nr\n \nt\nh\na\nn\n \na\nn\n \ne\nx\nt\ne\nr\nn\na\nl\n \nt\nr\nu\ns\nt\n.\n”\n \nW\ne\n \nb\ne\nl\ni\ne\nv\ne\n \ni\nt\n \ni\ns\n \nl\ni\nk\ne\nl\ny\n \nt\nh\na\nt\n \nN\nT\nL\nM\n \nr\ne\nl\na\ny\n \na\nb\nu\ns\ne\n \ns\nc\ne\nn\na\nr\ni\no\ns\n \ne\nx\ni\ns\nt\n \nt\no\n \na\nb\nu\ns\ne\n \nt\nh\ne\n \ns\na\nm\ne\n \ni\ns\ns\nu\ne\n \ni\nn\n \ne\nx\nt\ne\nr\nn\na\nl\n \nt\nr\nu\ns\nt\n \nt\ny\np\ne\ns\n \nb\nu\nt\n \nd\no\n \nn\no\nt\n \nc\nu\nr\nr\ne\nn\nt\nl\ny\n \nh\na\nv\ne\n \na\n \nc\no\nm\np\nl\ne\nt\ne\nl\ny\n \nf\nu\nn\nc\nt\ni\no\nn\ni\nn\ng\n \np\nr\no\no\nf\n \no\nf\n \nc\no\nn\nc\ne\np\nt\n.\n \n \n \n.\n.\n.\n \n \n \n \nU\ns\ne\nr\ns\n \nf\nr\no\nm\n \nt\nh\ne\n \nR\ne\nd\n \nF\no\nr\ne\ns\nt\n \na\nr\ne\n \nt\nh\ne\nn\n \na\nd\nd\ne\nd\n \nt\no\n \nt\nh\ne\n \nB\nU\nI\nL\nT\nI\nN\n\\\nA\nd\nm\ni\nn\ni\ns\nt\nr\na\nt\no\nr\ns\n \ng\nr\no\nu\np\ns\n \no\nn\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\ns\n \ni\nn\n \nt\nh\ne\n \np\nr\no\nd\nu\nc\nt\ni\no\nn\n \nf\no\nr\ne\ns\nt\ns\n \nf\no\nr\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\n \na\nd\nm\ni\nn\ni\ns\nt\nr\na\nt\ni\no\nn\n.\n \n \n \n.\n.\n.\n \n \n \n \nH\no\nw\ne\nv\ne\nr\n,\n \nt\nh\ne\nr\ne\n \nm\na\ny\n \nb\ne\n \ns\ni\nt\nu\na\nt\ni\no\nn\ns\n \nw\nh\ne\nr\ne\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\ns\n \no\nr\n \no\nt\nh\ne\nr\n \np\nr\ni\nv\ni\nl\ne\ng\ne\nd\n \nu\ns\ne\nr\ns\n \nf\nr\no\nm\n \nt\nh\ne\n \nt\nr\nu\ns\nt\ne\nd\n \nd\no\nm\na\ni\nn\n \n(\nF\nO\nR\nE\nS\nT\nA\n \ni\nn\n \nt\nh\ni\ns\n \nc\na\ns\ne\n)\n \na\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ne\n \nt\no\n \nt\nh\ne\n \na\nt\nt\na\nc\nk\ne\nr\n-\nc\no\nn\nt\nr\no\nl\nl\ne\nr\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\n \ni\nn\n \nF\nO\nR\nE\nS\nT\nB\n.\n \n \n \n.\n.\n.\n \n \n \n \nT\nh\ni\ns\n \nc\na\nn\n \nb\ne\n \na\n \nd\no\nm\na\ni\nn\n \nt\nr\nu\ns\nt\n \no\nr\n \na\n \nf\no\nr\ne\ns\nt\n \nt\nr\nu\ns\nt\n.\n \n \n \n.\n.\n.\n \n \n \n \nT\nh\ni\ns\n \ni\nm\np\nl\ni\ne\ns\n \nt\nh\na\nt\n \nt\nh\ne\nr\ne\n \nm\na\ny\n \nb\ne\n \nb\na\ns\nt\ni\no\nn\n \nf\no\nr\ne\ns\nt\n \ns\ne\nt\nu\np\ns\n \nw\nh\ne\nr\ne\n \nt\nh\ne\n \nC\nO\nR\nP\n \nf\no\nr\ne\ns\nt\n \nh\na\ns\n \na\n \nt\nw\no\n-\nw\na\ny\n \ni\nn\nt\ne\nr\nf\no\nr\ne\ns\nt\n \nt\nr\nu\ns\nt\n \nw\ni\nt\nh\n \nt\nh\ne\n \nP\nR\nI\nV\n \nf\no\nr\ne\ns\nt\n \na\nn\nd\n \ni\ns\n \na\nb\nu\ns\na\nb\nl\ne\n \nv\ni\na\n \nt\nh\ne\n \na\nt\nt\na\nc\nk\n \nd\ne\ns\nc\nr\ni\nb\ne\nd\n \ni\nn\n \nt\nh\ni\ns\n \np\no\ns\nt\n.\n \n \n \n.\n.\n.\n \n \n \n \nI\n \nt\ne\ns\nt\ne\nd\n \nt\nw\no\n \nt\nr\nu\ns\nt\n-\nr\ne\nl\na\nt\ne\nd\n \ns\ne\nc\nu\nr\ni\nt\ny\n \nm\ni\nt\ni\ng\na\nt\ni\no\nn\ns\n:\n \ns\ne\nl\ne\nc\nt\ni\nv\ne\n \na\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ni\no\nn\n \na\nn\nd\n \nt\nh\ne\n \nd\ni\ns\na\nb\nl\ni\nn\ng\n \no\nf\n \nT\nG\nT\n \nd\ne\nl\ne\ng\na\nt\ni\no\nn\n \na\nc\nr\no\ns\ns\n \nt\nr\nu\ns\nt\ns\n.\n \n \n \n.\n.\n.\n \n \n \n \nS\ne\nl\ne\nc\nt\ni\nv\ne\n \na\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ni\no\nn\n \ni\ns\n \na\n \ns\ne\nc\nu\nr\ni\nt\ny\n \ns\ne\nt\nt\ni\nn\ng\n \nt\nh\na\nt\n \nc\na\nn\n \nb\ne\n \ns\ne\nt\n \no\nn\n \ni\nn\nt\ne\nr\nf\no\nr\ne\ns\nt\n \nt\nr\nu\ns\nt\ns\n.\n \n \n \n.\n.\n.\n \n \n \n \nI\nf\n \nt\nh\ne\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\ns\n \ni\nn\n \ne\na\nc\nh\n \nd\no\nm\na\ni\nn\n \na\nr\ne\n \ng\nr\na\nn\nt\ne\nd\n \nt\nh\ni\ns\n \nr\ni\ng\nh\nt\n \no\nn\n \ne\na\nc\nh\n \no\nt\nh\ne\nr\n,\n \nt\nh\ne\nn\n \nt\nh\ne\n \na\nt\nt\na\nc\nk\n \nc\na\nn\n \ns\nu\nc\nc\ne\ne\nd\n,\n \na\ns\ns\nu\nm\ni\nn\ng\n \na\nn\n \na\nt\nt\na\nc\nk\ne\nr\n \nh\na\ns\n \nc\no\nd\ne\n \ne\nx\ne\nc\nu\nt\ni\no\nn\n \na\ns\n \nS\nY\nS\nT\nE\nM\n \no\nn\n \na\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\n \ni\nn\n \nF\nO\nR\nE\nS\nT\nB\n,\n \nw\nh\ni\nc\nh\n \nu\ns\ne\ns\n \nt\nh\ne\n \nD\nC\nB\n$\n \nm\na\nc\nh\ni\nn\ne\n \na\nc\nc\no\nu\nn\nt\n \nw\nh\ne\nn\n \nq\nu\ne\nr\ny\ni\nn\ng\n \nF\nO\nR\nE\nS\nT\nA\n \na\nn\nd\n \nt\nh\ne\n \ns\nu\nb\ns\ne\nq\nu\ne\nn\nt\n \np\nr\ni\nn\nt\ne\nr\n \nb\nu\ng\n \nt\nr\ni\ng\ng\ne\nr\n.\n \n \n \n.\n.\n.\n \n \n \n \nS\no\n \ni\nn\n \nm\no\ns\nt\n \nr\ne\na\nl\ni\ns\nt\ni\nc\n \ns\nc\ne\nn\na\nr\ni\no\ns\n \nw\nh\ne\nr\ne\n \ns\ne\nl\ne\nc\nt\ni\nv\ne\n \na\nu\nt\nh\ne\nn\nt\ni\nc\na\nt\ni\no\nn\n \ni\ns\n \nc\no\nn\nf\ni\ng\nu\nr\ne\nd\n \nf\no\nr\n \na\nt\n \nl\ne\na\ns\nt\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\ns\n \nb\ne\nt\nw\ne\ne\nn\n \nt\nh\ne\n \nt\nr\nu\ns\nt\ni\nn\ng\n \nf\no\nr\ne\ns\nt\ns\n,\n \nt\nh\ne\n \na\nt\nt\na\nc\nk\n \nm\na\ny\n \ns\nt\ni\nl\nl\n \nw\no\nr\nk\n.\n \n \n \n.\n.\n.\n \n \n \n \nH\no\nw\ne\nv\ne\nr\n,\n \na\ns\n \nt\nh\ne\n \ns\ne\nt\nt\ni\nn\ng\n \nw\na\ns\n \no\nn\nl\ny\n \ns\ne\nt\n \ni\nn\n \nF\nO\nR\nE\nS\nT\nA\n,\n \nn\no\nt\n \ni\nn\n \nF\nO\nR\nE\nS\nT\nB\n,\n \nt\nh\ne\n \na\nt\nt\na\nc\nk\n \nw\ni\nl\nl\n \ns\nt\ni\nl\nl\n \nw\no\nr\nk\n \nf\nr\no\nm\n \nF\nO\nR\nE\nS\nT\nA\n \nt\no\n \nF\nO\nR\nE\nS\nT\nB\n,\n \na\ns\n \nd\ne\nl\ne\ng\na\nt\ne\nd\n \nT\nG\nT\ns\n \nc\na\nn\n \ns\nt\ni\nl\nl\n \nf\nl\no\nw\n \nf\nr\no\nm\n \nF\nO\nR\nE\nS\nT\nB\n \nt\no\n \nF\nO\nR\nE\nS\nT\nA\n:\n \n \n \n.\n.\n.\n \n \n \n \nW\ne\n \na\nl\ns\no\n \nc\na\nu\nt\ni\no\nn\n \na\ng\na\ni\nn\ns\nt\n \nb\ne\nl\ni\ne\nv\ni\nn\ng\n \nt\nh\ne\ns\ne\n \ns\np\ne\nc\ni\nf\ni\nc\n \ns\nt\ne\np\ns\n \nt\no\n \nb\ne\n \na\nn\ny\n \nk\ni\nn\nd\n \no\nf\n \ns\ni\nl\nv\ne\nr\n \nb\nu\nl\nl\ne\nt\n,\n \na\ns\n \nt\nh\ne\nr\ne\n \na\nr\ne\n \ns\no\nm\ne\n \nv\ne\nr\ny\n \ni\nn\nt\ne\nr\ne\ns\nt\ni\nn\ng\n \na\nt\nt\na\nc\nk\n \ns\nc\ne\nn\na\nr\ni\no\ns\n \nb\ne\ny\no\nn\nd\n \nj\nu\ns\nt\n \nd\no\nm\na\ni\nn\n \nc\no\nn\nt\nr\no\nl\nl\ne\nr\ns\n.\n \n \n \n.\n.\n.\n \n \n "
    ],
    "html_url": "https://blog.harmj0y.net/redteaming/not-a-security-boundary-breaking-forest-trusts/",
    "text": "For years Microsoft has stated that the forest was the security boundary in Active Directory. For example, Microsoft’s “What Are Domains and Forests?” document (last updated in 2014) has a “Forests as Security Boundaries” section which states (emphasis added):\n\nEach forest is a single instance of the directory, the top-level Active Directory container, and a security boundary for all objects that are located in the forest. This security boundary defines the scope of authority of the administrators. In general, a security boundary is defined by the top-level container for which no administrator external to the container can take control away from administrators within the container. As shown in the following figure, no administrators from outside a forest can control access to information inside the forest unless first given permission to do so by the administrators within the forest.\n\nUnfortunately, this is not the case. The forest is no longer a security boundary.\n\nBy applying the MS-RPRN abuse issue (previously reported to Microsoft Security Response Center by my workmate Lee Christensen) with various trust scenarios, we determined that administrators from one forest can in fact compromise resources in a forest that it shares a two-way interforest trust with. For more information on Lee’s MS-RPRN abuse (a legacy printer protocol “feature”) check out the DerbyCon 2018 “The Unintended Risks of Trusting Active Directory” presentation that my workmates @tifkin_, @enigma0x3, and myself gave this year. For more background on trusts, check out my “Guide to Attacking Domain Trusts” from last year.\n\nThe tl;dr non-technical explanation of “Why Care?” is that if your organization has a two-way forest trust (possibly ‘external’ trusts as well, more on that later) with another Active Directory forest, and if an attacker can compromise a single machine with unconstrained delegation (e.g. a domain controller) in that foreign forest, then they can leverage this to compromise your forest and every domain within it. In our opinion, this is very bad.\n\nThe tl;dr technical explanation is due to several default Active Directory forest configurations (detailed in the “Attack Explanation” section below) an attacker who compromises a domain controller in a forest (or any server with unconstrained delegation in said forest) can coerce domain controllers in foreign forests to authenticate to the attacker-controlled server through “the printer bug.” Due to various delegation settings, the foreign domain controller’s ticket-granting-ticket (TGT) can be extracted on the attacker-controlled server, reapplied, and used to compromise the credential material in the foreign forest.\n\nThis issue was reported to Microsoft’s Security Response center, and the associated teams determined that this was an issue best resolved via v.Next, meaning it may be fixed in a future version of Windows. There is more detail concerning their response and my subsequent thoughts in the “Microsoft’s Response and My Thoughts” section at the bottom of this post. Also later in the post is mitigation guidance, and my teammate Roberto Rodriquez has a defensive post on complete detective guidance titled “Hunting in Active Directory: Unconstrained Delegation & Forests Trusts“.\n\nVulnerability Attack Explanation\n\nThere are four main “features” in a default Active Forest installation that allow this attack to happen.\n\nWritable domain controllers in default domain deployments are configured to allow unconstrained delegation. This means that any user that does not have the “Account is sensitive and cannot be delegated” setting on their account or is not contained within the “Protected Users” group will send their TGT within a service ticket when accessing a server with unconstrained delegation. From what we can tell, and from those we’ve spoken to, domain controller accounts themselves are almost never granted these protections- they are almost always applied just to domain administrator accounts. For more information on unconstrained delegation, check out Sean Metcalf’s post on the subject, or the DerbyCon 2018 “The Unintended Risks of Trusting Active Directory” presentation that my workmates @tifkin_, @enigma0x3, and myself gave this year.\nAccording to Microsoft, “When full delegation is enabled for Kerberos on a server, the server can use the delegated ticket-granting ticket (TGT) to connect as the user to any server, including those across a one way trust.“ This means that delegated TGT tickets can cross interforest trust boundaries. This behavior is enabled by default but can be manually blocked- see the “Attack Mitigations” section later in this post for guidance.\nThe abuse of the previously-reported RpcRemoteFindFirstPrinterChangeNotification(Ex) RPC call (aka MS-RPRN abuse, “the printer bug”) allows any domain member of “Authenticated Users” to force any machine running the Spooler service to authenticate to a target of the attacker’s choice via Kerberos or NTLM. Again, for more information on Lee’s “printer bug”, check out our DerbyCon talk.\nFinally, according to Microsoft, “When users authenticate from a trusted forest, they receive the Authenticated Users SID in their token. Many of the default rights for users in a forest are granted through the Authenticated Users.” This means that any user in a trusted forest can execute the “printer bug” against machines in a foreign forest, as “Authenticated Users” is all the access needed to trigger the forced authentication.\n\nCombined together, this means that if FORESTA has a two way interforest trust with FORESTB, then the compromise of any domain controller (or any server with unconstrained delegation) in FORESTB can be leveraged to compromise the FORESTA forest root (or vice versa) and all domains within it!\n\nTo execute this attack (using currently public tools) an attacker would:\n\nCompromise any server with unconstrained delegation, for example a domain controller (e.g. DCB) in FORESTB.\nBegin monitoring for 4624 logon events on the compromised FORESTB server, extracting new TGTs from any new logon sessions through established LSA APIs. This can be done with Rubeus’ monitor action.\nTrigger the MS-RPRN “printer bug” against a domain controller (e.g. DCA) in FORESTA. This can be done with Lee’s proof of concept code.\nFORESTA’s domain controller will authenticate to the attacker-controlled server in FORESTB with the FORESTA domain controller machine account (DCA$ in this case). The TGT of FORESTA’s DC will be contained within the service ticket sent to the attacker-controlled server and cached in memory for a short period of time.\nThe attacker extracts the foreign domain controller’s TGT using established LSA APIs, and applies the TGT to the current (or another) logon session. This can again be done using Rubeus.\nThe attacker executes a DCSYNC attack against FORESTA to retrieve privileged credential material in FORESTA (such as the hash of the FORESTA\\krbtgt account).\n\nHere’s a diagram of what’s happening:\n\nKind of make sense? How about seeing the attack work in action.\n\nThe following screenshots show compromising FORESTA.LOCAL from the domain controller DCB.FORESTB.LOCAL :\n\nThe following screenshot shows compromising FORESTB.LOCAL from the domain controller DCA.FORESTA.LOCAL :\n\nOr check out this demonstration video of the entire attack.\n\nThis attack also provides an alternative way to escalate from a child domain to the root domain within the same forest, similar to the abuse of sidHistory in Golden Tickets discovered by Sean Metcalf and Benjamin Delpy in 2015. However, as the forest is specified as the trust boundary, this is not quite as interesting as the compromise of interforest trusts that this new attack entails.\n\nAgain, as a tl;dr – the compromise of any server with unconstrained delegation (domain controller or otherwise) can not only be leveraged to compromise the current domain and/or any domains in the current forest, but also any/all domains in any foreign forest the current forest shares a two-way forest trust with!\n\nAs we stated previously, in our opinion this is very very bad. Why? This attack works with default, modern configurations for Active Directory forests as long as a two-way forest trust is in place. Also, as mentioned, this attack works from any system with unconstrained delegation enabled, not just domain controllers. Imagine this scenario:\n\nHotStartup has a single forest with multiple domains. In one development subdomain that’s used for testing and not as monitored/protected as the production domain, an administrator provisions a testing server with unconstrained delegation (for some reason). This server is used and not deprovisioned due to an oversight, and the fact that it’s in the development domain.\nSuperMegaCorp purchases HotStartup and establishes a two-way forest trust between the two forests using Microsoft’s existing trust guidance.\nAn attacker is able to compromise the development unconstrained delegation server. The attacker executes this attack against a domain controller in SuperMegaCorp and is able to compromise all resources in the SuperMegaCorp forest.\n\nSo what if SuperMegaCorp (or HotStartup) performed proper network segmentation and the development server is restricted from talking to machines outside its development subdomain? Well, domain controllers have to be able to talk to each other for replication to occur. The attacker could use the unconstrained dev server compromise to compromise the development subdomain via the attack, perform the attack again to hop from the development subdomain domain controller to the production domain controller, and perform the attack a third time to compromise SuperMegaCorp‘s forest. This is marginally better than no segmentation, as it forces an attacker to log onto various domain controllers to perform the attack (instead of from ANY unconstrained server) but the attack chain is still feasible.\n\nLike we stated, we believe this is bad.\n\nA note on one-way trusts\n\nWe tested the one-way interforest trust scenario, where FORESTB.LOCAL –trusts–> FORESTA.LOCAL, but we were unable to get the attack working in either direction (FORESTA to FORESTB nor FORESTB to FORESTA).\n\nWe believe this is because while delegation TGTs can flow from FORESTA to FORESTB in this case, users in FORESTB cannot authenticate to FORESTA, so they do not receive a referral ticket with “Authenticated Users” within in it. This means that the printer bug cannot be triggered against FORESTA’s DC from FORESTB. In the reverse direction, while users from FORESTA can trigger the printer bug against DCs in FORESTB, as delegated TGTs cannot flow from FORESTB to FORESTA the attack as also not successful.\n\nHowever, we believe that NTLM relay scenarios still might be possible in some of these situations. More investigation is needed.\n\nA note on “External” trusts\n\nExternal trusts are between two disparate domains instead of between two forests. The examples were tested with “external” (instead of interforest) trust types, but authentication kept falling back to NTLM instead of Kerberos, preventing the particular attack scenario described.\n\nAs external trusts are notoriously difficult to get functioning 100% with Kerberos (see the Kerberos V5 support section of Table 1 External vs. Forest Trusts in the “Technologies for Federating Multiple Forests” documentation), “Microsoft recommends a forest trust be created between forests rather than an external trust.” We believe it is likely that NTLM relay abuse scenarios exist to abuse the same issue in external trust types but do not currently have a completely functioning proof of concept.\n\nA Note on ESAE/“Red Forest”\n\nIn the “Enhanced Security Administrative Environment” architecture, a bastion “Red Forest” has one way interforest trusts with one or more production forests, where the production forests trust the Red Forest. Users from the Red Forest are then added to the BUILTIN\\Administrators groups on domain controllers in the production forests for domain controller administration.\n\nAs described in the “Attack Explanation” section, when FORESTB trusts FORESTA (so users from FORESTA can authenticate to FORESTB), we were unable to trigger the printer bug on domain controllers in FORESTA as users from FORESTB cannot authenticate to resources in FORESTA. However, there may be situations where domain controllers or other privileged users from the trusted domain (FORESTA in this case) authenticate to the attacker-controller domain controller in FORESTB. In this case, delegated TGTs might still flow to FORESTB in a way that then allows for their extraction and reuse. This scenario necessitates further testing in production environments, along with the previously mentioned possible NTLM relay scenarios.\n\nAlso, as suggested in Microsoft’s “Planning a bastion environment” documentation (emphasis added):\n\nThe production CORP forest should trust the administrative PRIV forest, but not the other way around. This can be a domain trust or a forest trust. The admin forest domain does not need to trust the managed domains and forests to manage Active Directory, though additional applications may require a two-way trust relationship, security validation, and testing.\n\nThis implies that there may be bastion forest setups where the CORP forest has a two-way interforest trust with the PRIV forest and is abusable via the attack described in this post.\n\nAttack Mitigations\n\nI tested two trust-related security mitigations: selective authentication and the disabling of TGT delegation across trusts.\n\nSelective Authentication\n\nAccording to Microsoft’s “Security Considerations for Trusts” documentation:\n\nSelective authentication is a security setting that can be set on interforest trusts. It provides Active Directory administrators who manage a trusting forest more control over which groups of users in a trusted forest can access shared resources in a trusting forest.\n\nEnabling this protection for both domains in the same two way interforest FORESTA.LOCAL <–trusts–> FORESTB.LOCAL example used previously stops the attack. However, according to Microsoft’s “Planning a bastion environment” documentation:\n\nSelective authentication should be used to ensure that accounts in the admin forest only use the appropriate production hosts. For maintaining domain controllers and delegating rights in Active Directory, this typically requires granting the “Allowed to logon” right for domain controllers to designated Tier 0 admin accounts in the admin forest.\n\nThis implies that domain controller objects often need the “Allowed to authenticate” right on foreign domain controllers in order for the system to work correctly. If the domain controllers in each domain are granted this right on each other, then the attack can succeed, assuming an attacker has code execution as SYSTEM on a domain controller in FORESTB, which uses the DCB$ machine account when querying FORESTA and the subsequent printer bug trigger.\n\nSo in most realistic scenarios where selective authentication is configured for at least domain controllers between the trusting forests, the attack may still work. However, the default setup for selective authentication between interforest trusts, with no other configuration, will stop the attack.\n\nDisabling Kerberos Full Delegation Across Trusts\n\nThe second protection tested was the disabling of Kerberos full delegation across interforest trusts. This was a feature introduced in Windows Server 2012. As the Microsoft documentation states:\n\nWhen full delegation is enabled for Kerberos on a server, the server can use the delegated ticket-granting ticket (TGT) to connect as the user to any server, including those across a one way trust. In Windows Server 2012, a trust across forests can be configured to enforce the security boundary by disallowing forwarding TGTs to enter other forests.\n\nThis setting was enabled on FORESTA’s domain controller with:\n\nC:\\>netdom trust foresta.local /domain:forestb.local /EnableTGTDelegation:no\n\nWhen this setting is set in FORESTA, the attack fails, as FORESTA will no longer send delegated TGTs to FORESTB:\n\nHowever, as the setting was only set in FORESTA, not in FORESTB, the attack will still work from FORESTA to FORESTB, as delegated TGTs can still flow from FORESTB to FORESTA:\n\nThis implies that for this mitigation to be effective, every domain controller in every domain in each trusting/trusted forest must be a) Server 2012 or above and b) set EnableTGTDelegation:no to prevent the flow of delegated TGTs to the trusted/trusting domain. For the moment, this appears to be the only realistic fix for this attack. However if a single domain controller in any domain in a target trusting forest does NOT have this protection set, an attack path should exist.\n\nMiscellaneous Mitigations\n\nAnother option is attempting to disable the Spooler service on domain controllers to prevent the forced machine account authentication via the printer bug. However, any additional forced-machine-account-authentication primitive like “the printer bug” (of which we believe there are more to be found) will result in the entire system falling once again. If you want to pursue this route, Vincent Le Toux recently released a scanner for the spooler/printer bug that you should be able to use.\n\nYou could also potentially add any sensitive machine accounts (domain controllers being the most obvious, but there are potentially others like Exchange servers) to the “Protected Users” group or enable the “Account is sensitive and cannot be delegated” setting to prevent servers from sending delegated TGTs over trust boundaries. If done for ALL sensitive machine accounts, either of these actions should prevent the described attack. However, we have not tested this in a real environment and do not know what the unintended consequences might be.\n\nWe also caution against believing these specific steps to be any kind of silver bullet, as there are some very interesting attack scenarios beyond just domain controllers. We’ll possibly cover some of these in the coming weeks.\n\nMicrosoft’s Response and My Thoughts\n\nThe following is the timeline of disclosure events with MSRC:\n\n10/23/2018 – Sent initial report to MSRC along with demonstration video.\n10/23/2018 – MSRC Case 48161 was opened and assigned to a case manager.\n10/30/2018 – Feedback from associated teams stated the determination is that this report doesn’t represent a vulnerability they would address in a security update, but rather something they would address in a future version as a Defense-in-Depth hardening change (i.e. v.Next).\n10/30/2018 – Additional feedback given to MSRC concerning my opinion as to the severity of the issue and the importance of an immediate fix.\n11/05/2018 – MSRC responded that the associated team(s) are maintaining their assessment of v.Next.\n\nDue to the v.Next determination, we waited to publish this post until we researched and released proper detection guidance.\n\nOf note, the MSRC staff I interacted with were amazing. However, the people in charge of the ultimate fix/won’t fix/v.Next decisions are the Microsoft teams responsible for the affected product(s). I understand why the responsible Microsoft team(s) didn’t want to fix this issue immediately. It’s a breakdown of a number of combined core “features” of Active Directory that, when strung together, produce the desired effect. “Fixing” this issue would not be easy and would likely break existing trust architectures.\n\nHOWEVER, as stated in the introduction, for years Microsoft stated that the forest is the security boundary in the Active Directory world, something we now know is not true. For years clients architected their Active Directory setups with the “forest is the security boundary” assumption- I myself have recommended to clients to build trusts between forests instead of within them because of the sidHistory attack. This is why we believe the issue discussed this in post is very, very bad.\n\nArchitectural flaws are not simple or cheap to fix. However, just as with Golden Tickets and the printer bug, Microsoft does not seem to view this issue as a vulnerability that needs to be immediately patched. Additionally, this situation is even more frustrating to me in that Microsoft directly and clearly states in their public documentation that the forest is the Active Directory security boundary, yet now they are refusing to treat it as one. Whether or not Microsoft formally states that the forest is no longer a security boundary, their determination on this issue seems to imply that this is in fact the case. This is unfortunate for many, many organizations.\n\nAt this point, our best mitigation advice is the “Disabling Kerberos Full Delegation Across Trusts” guidance or consider removing the trusts all together, though additional research is still needed. Also, see my teammate Roberto Rodriquez’ defensive post on complete detective guidance.",
    "title": "Not A Security Boundary: Breaking Forest Trusts"
}
{
    "brief": [
        "None   ...   ",
        "N\no\nn\ne\n \n \n \n.\n.\n.\n \n \n "
    ],
    "html_url": "https://blog.harmj0y.net/redteaming/not-a-security-boundary-breaking-forest-trusts/",
    "text": null,
    "title": "Not A Security Boundary: Breaking Forest Trusts"
}
