{
    "brief": "Disclosure of uninitialized memory is one of the common problems faced when copying data across trust boundaries.       ...        The most common bug pattern noticed among these cases is where a structure or union is allocated in memory, and some of the fields or padding bytes are not initialized before copying it across trust boundaries.       ...        The question is, is it possible to perform variant analysis of such bugs?       ...       ",
    "html_url": "https://www.zerodayinitiative.com/blog/2022/9/19/mindshare-analyzing-bsd-kernels-with-binary-ninja",
    "text": "Disclosure of uninitialized memory is one of the common problems faced when copying data across trust boundaries. This can happen between the hypervisor and guest OS, kernel and user space, or across the network. The most common bug pattern noticed among these cases is where a structure or union is allocated in memory, and some of the fields or padding bytes are not initialized before copying it across trust boundaries. The question is, is it possible to perform variant analysis of such bugs?\n\nThe idea here is to perform a control flow insensitive analysis to track all memory store operations statically. Any memory region never written to is identified as uninitialized when the data from it is copied across trust boundaries.\n\nGeneralizing the code pattern for analysis",
    "title": "MINDSHARE: ANALYZING BSD KERNELS FOR UNINITIALIZED MEMORY DISCLOSURES USING BINARY NINJA"
}
